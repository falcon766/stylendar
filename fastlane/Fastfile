# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
# fastlane_version "2.54.2"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
    
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "Stylendar") # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "Stylendar") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


generic_appcenter_info = {
  api_token: ENV['APP_CENTER_TOKEN'],
  owner_name: ENV['APP_CENTER_OWNER_NAME'],
  release_notes: Time.now.strftime('%Y%m%d %H:%M:%S'),
  group: ENV['APP_CENTER_GROUP']
}

platform :ios do
  desc 'Prepare for building iOS'
  private_lane :prepare do
    version = increment_build_number(xcodeproj: './Stylendar.xcodeproj')
    Dir.chdir('..') do
      sh 'pod install'
    end
    version
  end

  desc 'Build the iOS application.'
  private_lane :build_adhoc do
    version = prepare
    build_app(
      silent: true,
      scheme: 'Stylendar',
      export_method: 'ad-hoc',
      workspace: './Stylendar.xcworkspace',
      clean: true,
      output_directory: './build/',
      output_name: 'Stylendar_Adhoc.ipa',
      export_options: {
        provisioningProfiles: {
          'com.Stylendar' => 'Stylendar_AdHoc'
        }
      }
    )
    version
  end

  desc 'Build and ship the iOS app to App Center'
  lane :buildToAppCenter do
    # version = build_adhoc
    appcenter_upload(
      generic_appcenter_info.merge(
        app_name: ENV['APP_CENTER_APP_NAME_IOS'],
        ipa: './build/Stylendar_Adhoc.ipa'
      )
    )
    git_commit(path: ['./Stylendar.xcodeproj', './Stylendar/Info.plist'], message: 'Bump versionCode')
    push_to_git_remote
    
  end
end

# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
